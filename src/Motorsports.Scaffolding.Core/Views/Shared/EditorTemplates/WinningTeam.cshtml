@using System.Collections
@using Newtonsoft.Json

@model int?

@{
  var allTeams = ((IEnumerable) ViewData["Teams"]).OfType<Team>().ToList();
  var selectedTeam = (int?) ViewData["SelectedTeam"];
  var targetProperty = ViewData["TargetProperty"] ?? "Team";
  var autofocus = bool.Parse(ViewData["Autofocus"]?.ToString() ?? "false");

  var groupedTeams = allTeams
    .GroupBy(team => team.Sport)
    .OrderBy(_ => _.Key)
    .Select(_ => new {
      id = 0,
      text = _.Key,
      children = _
        .OrderBy(team => team.Name)
        .Select(team => new {
          id = team.Id,
          text = team.Name
        })
    }).ToArray();
}

<select name="@targetProperty" id="slcTeams" class="form-control" @(autofocus ? "autofocus=\"autofocus\"" : string.Empty)></select>

<script>
  $(document).ready(function() {
    var teams = $("#slcTeams");
    teams.select2({
      placeholder: "Select the winning team",
      allowClear: true,
      data: @Html.Raw(JsonConvert.SerializeObject(groupedTeams))
    });
    teams.val(@Html.Raw(selectedTeam.HasValue
                ? "\"" + selectedTeam.Value + "\""
                : "null"));
    teams.trigger("change"); // Notify any JS components that the value changed
  });
</script>