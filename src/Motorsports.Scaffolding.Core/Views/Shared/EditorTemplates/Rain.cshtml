@using System.Collections
@using Newtonsoft.Json

@model RainLevel?

@{
  var allRainLevels = ((IEnumerable) ViewData["RainLevels"]).OfType<RainLevel>().ToList();
  var selectedRainLevel = (RainLevel?) ViewData["SelectedRainLevel"];
  var targetProperty = ViewData["TargetProperty"] ?? "RainLevel";

  var rainLevelsData = allRainLevels
    .Select(_ => new {
      id = _.ToString(),
      text = _.GetDisplayName()
    }).ToArray();
}

<select name="@targetProperty" id="slcRainLevels" class="form-control"></select>

<script>
  $(document).ready(function() {
    var rainLevels = $("#slcRainLevels");
    rainLevels.select2({
      placeholder: "Select a rain level",
      data: @Html.Raw(JsonConvert.SerializeObject(rainLevelsData)),
      escapeMarkup: function(markup) { return markup; }
    });
    rainLevels.val(@Html.Raw(selectedRainLevel.HasValue
                  ? "\"" + selectedRainLevel.Value + "\""
                  : "null"));
    rainLevels.trigger("change"); // Notify any JS components that the value changed
  });
</script>