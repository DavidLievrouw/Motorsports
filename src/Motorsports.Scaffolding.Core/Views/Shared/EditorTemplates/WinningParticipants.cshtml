@using System.Collections
@using Newtonsoft.Json

@model int[]

@{
  var allParticipants = ((IEnumerable) ViewData["Participants"]).OfType<Participant>().ToList();
  var selectedParticipants = (int[]) ViewData["SelectedParticipants"];
  var targetProperty = ViewData["TargetProperty"] ?? "WinningParticipants";
  var autofocus = bool.Parse(ViewData["Autofocus"]?.ToString() ?? "false");

  var participantsData = allParticipants
    .Select(_ => new {
      id = _.Id,
      text = $"{_.FirstName} {_.LastName} ({_.Country})"
    }).ToArray();
}

<select name="@(targetProperty)[]" id="slcWinningParticipants" class="form-control" multiple="multiple" @(autofocus ? "autofocus=\"autofocus\"" : string.Empty)></select>

<script>
  $(document).ready(function() {
    var winningParticipants = $("#slcWinningParticipants");
    winningParticipants.select2({
      placeholder: "Select winning participant(s)",
      allowClear: true,
      maximumSelectionSize: 4,
      data: @Html.Raw(JsonConvert.SerializeObject(participantsData))
    });
    winningParticipants.val(@Html.Raw(selectedParticipants.Any()
                              ? JsonConvert.SerializeObject(selectedParticipants)
                              : "null"));
    winningParticipants.trigger("change"); // Notify any JS components that the value changed
  });
</script>