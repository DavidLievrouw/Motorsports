@using System.Collections
@using Motorsports.Scaffolding.Core.Services
@using Newtonsoft.Json

@model string

@inject IImageService _imageService

@{
  var allSports = ((IEnumerable) ViewData["Sports"]).OfType<Sport>().ToList();
  var selectedSport = (string) ViewData["SelectedSport"];
  var targetProperty = ViewData["TargetProperty"] ?? "Sport";
  var autofocus = bool.Parse(ViewData["Autofocus"]?.ToString() ?? "false");

  var sportsData = allSports
    .Select(sport => new {
      id = sport.Name,
      text = sport.Name,
      logo = _imageService.GetSportLogo(sport.Name)
    }).ToArray();
}

<select name="@targetProperty" id="slcSports" class="form-control" @(autofocus ? "autofocus=\"autofocus\"" : string.Empty)></select>

<script>
  $(document).ready(function() {
    var sports = $("#slcSports");
    sports.select2({
      placeholder: "Select a sport",
      data: @Html.Raw(JsonConvert.SerializeObject(sportsData)),
      templateResult: formatState,
      templateSelection: formatState
    });
    sports.val(@Html.Raw(string.IsNullOrEmpty(selectedSport)
                 ? "null"
                 : "\"" + selectedSport + "\""));
    sports.trigger("change"); // Notify any JS components that the value changed
  });

  function formatState(state) {
    if (!state.id) return state.text;
    return $('<div><div class="sportoptionlogo"><img src="' +
      state.logo +
      '" /></div><div class="sportoptiontext">' +
      state.text +
      '</div></div>');
  };
</script>