@using Motorsports.Scaffolding.Core.Services

@model Motorsports.Scaffolding.Core.Models.DisplayModels.RoundDetailDisplayModel

@inject IImageService _imageService

@{
  ViewData["Title"] = "Details of a round";
}

<h2>Details</h2>

<div>
  <blockquote>
    <div class="sportlogoContainer">
      <img class="sportlogo" src="@_imageService.GetSportLogo(Model.Round.RelatedSeason.Sport)" alt="@Model.Round.RelatedSeason.Sport"/>
    </div>
    <h4 class="viewName">Round</h4>
  </blockquote>
  <hr/>
  <dl class="dl-horizontal">
    <dt>
      @Html.DisplayNameFor(model => model.Round.RelatedSeason.Sport)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.Round.RelatedSeason.RelatedSport.FullName)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.Round.Season)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.Round.RelatedSeason)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.Round.NumberDescription)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.Round.NumberDescription)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.Round.Date)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.Round.Date)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.Round.Name)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.Round.Name)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.Round.Venue)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.Round.RelatedVenue)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.Round.Status)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.Round.Status)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.Round.Rating)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.Round.Rating)/10
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.Round.Rain)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.Round.Rain)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.Round.WinningTeamId)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.Round.WinningTeamName)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.Round.WinningParticipantIds)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.Round.WinningParticipants, nameof(Model.Round.WinningParticipants))
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.Round.Note)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.Round.Note)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.EventHistory)
    </dt>
    <dd>
      @if (!Model.EventHistory.Any()) {
        <div class="disabled">No event history available</div>
      }
      else {
        <table>
          <tbody>
          @foreach (var eventHistoryItem in Model.EventHistory) {
            <tr class="eventHistoryItemContainer">
              <td>
                @Html.DisplayFor(model => eventHistoryItem, nameof(eventHistoryItem))
              </td>
              <td>
                <a class="eventHistoryItemLink" asp-action="Details" asp-controller="Rounds" asp-route-id="@eventHistoryItem.Id">Details</a>
              </td>
            </tr>
          }
          </tbody>
        </table>
      }
    </dd>
  </dl>
</div>
<div>
  <a asp-action="Edit" asp-route-id="@Model.Round.Id">Edit</a> |
  <a asp-action="Index" asp-route-id="@Model.Round.Season">Back to List</a>
</div>